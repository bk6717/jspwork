package com.cos.blog.action.board;

import java.io.IOException;
import java.security.Principal;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.websocket.Session;

import com.cos.blog.action.Action;
import com.cos.blog.model.Board;
import com.cos.blog.model.Users;
import com.cos.blog.repository.BoardRepository;
import com.cos.blog.utill.Script;

public class BoardWriteProcAction implements Action{
	@Override
	public void execute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		HttpSession session = request.getSession();
		if (session.getAttribute("principal") == null) {
			return;
		}
		//1.. request에 title값과 content값 null인지 공백인지 확인
			if(
				request.getParameter("title").equals("")||
				request.getParameter("title") == null ||
				
				request.getParameter("content").equals("")||
				request.getParameter("content") == null
				) {
				return;
			 }
		//2.. request에 title값과 content값 , id받기
			String title = request.getParameter("title");
			String content = request.getParameter("content");
			Users principal = (Users)session.getAttribute("principal");
		
			
		//3.. title값과 content, principal.getId 값을 Board 오브젝트에 담기
			Board board = Board.builder()
					.userId(principal.getId())
					.title(title)
					.content(content)
					.readCount(0)
					.build();
			
		//4.. BoardRepository연결해서 save(title. content)함수 호출
			BoardRepository boardRepository =
					BoardRepository.getInstance();
			
			int result = boardRepository.save(board);
		
		
			if(result == 1) {   //5.. result == 1 이면 성공로직 (index.jsp로 이동 )
				Script.href("글쓰기 성공","index.jsp" , response);
				
			}else if(result == -1){ //6.. result == -1이면 실패로직 (history.back)
				Script.back(" 글쓰기 실패 ", response);
			}
			
		
	}
}
