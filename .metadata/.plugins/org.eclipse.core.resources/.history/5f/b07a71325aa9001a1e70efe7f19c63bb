package com.cos.blog.action.user;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.tomcat.jni.User;

import com.cos.blog.action.Action;
import com.cos.blog.model.RoleType;
import com.cos.blog.model.Users;
import com.cos.blog.repository.UsersRepository;
import com.cos.blog.utill.Script;

public class UserUpdateProcAction implements Action{
@Override
public void execute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
	//0.유효성 검사
	HttpSession session = request.getSession();
	if (session.getAttribute("principal")== null) {
		Script.getMessage("잘못된접근입니다.", response);
		return;
	}
	
	if
	(
		request.getParameter("password").equals("") ||
		request.getParameter("password") == null ||

		request.getParameter("email").equals("") ||
		request.getParameter("email") == null ||

		request.getParameter("address").equals("") ||
		request.getParameter("address") == null
	) {
		Script.getMessage("잘못된 접근입니다.", response);
		return; 
	}
	
	//1. 파라메터 받기   (x-www-form-urlencoded 라는 MIME타입 key = value 형태) 
	String password = request.getParameter("password");
	String email = request.getParameter("email");
	String address = request.getParameter("address");
	
	//2.User 오브젝트 변환
	Users user = Users.builder()
			.id(user.getId())
			.password(password)
			.email(email)
			.address(address)
			.build();
	
	//3.DB연결 
	UsersRepository usersRepository =
			UsersRepository.getInstance();
	int result = usersRepository.update(user);
	
	//4,index.jsp
	if(result == 1) {
		Script.href("회원수정에 성공하였습니다", "/blog/user?cmd=index", response);
		
	}else {
		Script.back("회원수정에 실패하였습니다.", response);
	}
}
  }

